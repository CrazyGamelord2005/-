package Study.OptimizationMethods;

import java.util.Scanner;

public class DichotomyMethod {

    private static int functionCalls = 0; // Счетчик обращений к функции

    public static double dichotomyMethod(double a, double b, double epsilon, int maxIterations) {
        double delta = epsilon / 2; // Небольшое смещение для вычисления точек
        double x1, x2, f1, f2;
        int iterations = 0;
        functionCalls = 0; // Сбрасываем счетчик

        System.out.println("Начальные параметры:");
        System.out.println("Интервал: [" + a + ", " + b + "]");
        System.out.println("Точность (epsilon): " + epsilon);
        System.out.println("Максимальное количество итераций: " + maxIterations);
        System.out.println("----------------------------------------");

        while ((b - a) / 2 > epsilon && iterations < maxIterations) {
            iterations++;

            x1 = (a + b) / 2 - delta;
            x2 = (a + b) / 2 + delta;
            f1 = func(x1);
            f2 = func(x2);

            // Вывод текущих значений
            System.out.println("Итерация " + iterations + ":");
            System.out.println("x1 = " + x1 + ", f(x1) = " + f1);
            System.out.println("x2 = " + x2 + ", f(x2) = " + f2);
            System.out.println("Текущий интервал: [" + a + ", " + b + "]");
            System.out.println("----------------------------------------");

            if (f1 < f2) { // Если значение функции в точке x1 меньше, чем в точке x2, минимум находится в левой части интервала.
                b = x2; // Обновляем правую границу
            } else {
                a = x1; // Обновляем левую границу
            }
        }

        System.out.println("Количество итераций: " + iterations);
        System.out.println("Количество обращений к функции: " + functionCalls);
        double minimumPoint = (a + b) / 2; // Найденная точка минимума
        double minimumValue = func(minimumPoint); // Значение функции в точке минимума
        System.out.println("Найденный минимум: x = " + minimumPoint + ", f(x) = " + minimumValue);
        return minimumPoint;
    }

    // Функция, которую мы минимизируем: f(x) = (x^2 + 1) / x
    public static double func(double x) {
        functionCalls++; // Увеличиваем счетчик обращений
        return (x * x + 1) / x;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Ввод интервала [a, b]
        System.out.print("Введите начало интервала (a): ");
        double a = scanner.nextDouble();

        System.out.print("Введите конец интервала (b): ");
        double b = scanner.nextDouble();

        // Ввод точности (epsilon)
        System.out.print("Введите точность (epsilon): ");
        double epsilon = scanner.nextDouble();

        // Ввод количества итераций
        System.out.print("Введите количество итераций: ");
        int maxIterations = scanner.nextInt();

        // Вызов метода дихотомии
        double minimum = dichotomyMethod(a, b, epsilon, maxIterations);

        scanner.close();
    }
}
